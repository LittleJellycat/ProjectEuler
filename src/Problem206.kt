//Find the unique positive integer whose square has the form 1_2_3_4_5_6_7_8_9_0
fun main(args: Array<String>) {
    for (n in 1_000_000_000..1_389_026_624) {
        // if ((n * n).toString().matches("1\\d2\\d3\\d4\\d5\\d6\\d7\\d8\\d9\\d0".toRegex())) {
        val sqr: Long = n * n.toLong()
        if (sqr % 10 == 0L
                && (sqr % 1_000) / 100 == 9L
                && (sqr % 100_000) / 10_000 == 8L
                && (sqr % 10_000_000) / 1_000_000 == 7L
                && (sqr % 1_000_000_000) / 100_000_000 == 6L
                && (sqr % 100_000_000_000) / 10_000_000_000 == 5L
                && (sqr % 10_000_000_000_000) / 1_000_000_000_000 == 4L
                && (sqr % 1_000_000_000_000_000) / 100_000_000_000_000 == 3L
                && (sqr % 100_000_000_000_000_000) / 10_000_000_000_000_000 == 2L
                && sqr / 1_000_000_000_000_000_000 == 1L) {
            println(n)
            return
        }
    }
}
